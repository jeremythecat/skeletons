# vim: set ft=yaml ts=2 expandtab:
#
# Copyright (c) Markus Falb <markus.falb@mafalb.at>
# GNU General Public License v3.0+
# see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt
---

name: CI

on:  # yamllint disable-line rule:truthy

  push:
    branches:
      - '**'
    tags-ignore:
      - '*'

  schedule:
    - cron: '40 12 * * 6'

  workflow_dispatch:

jobs:

  SELECTBRANCH:
    uses: mafalb/workflows/.github/workflows/reusable-selectbranch.yml@main

  ci:

    # don't run on pull request from ourselves
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    runs-on: ubuntu-22.04
    needs: SELECTBRANCH
    strategy:
      fail-fast: false

    env:
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1

    defaults:
      run:
        working-directory: ansible_collections/mafalb

    steps:

      - name: checkout
        uses: actions/checkout@v4
        with:
          path: ansible_collections/mafalb/ansible_collection_skeleton

      - name: install shellcheck
        run: sudo apt-get install shellcheck

      - name: install ansible-lint
        run: pip install ansible-lint

      - name: create a new collection
        run: |
          cd ../
          ansible-galaxy collection init --collection-skeleton mafalb/ansible_collection_skeleton mafalb.ci

      - name: lint
        run: |
          cd ci
          ansible-lint -x galaxy[version-incorrect],galaxy[tags]

      - name: sanity
        run: |
          cd ci
          ansible-test sanity

  dispatch:
    runs-on: ubuntu-22.04
    needs:
      - SELECTBRANCH
      - ci
    env:
      # stay in the environment we are in
      # i.e. if we are running in dev, we want to call others in dev
      TARGETED_BRANCH: ${{ needs.SELECTBRANCH.outputs.ref }}
    steps:

      - name: Assertions
        run: |
          test -n "$TARGETED_BRANCH"

      - name: Run workflow on mafalb/ansible-test-collections
        env:
          URI: https://api.github.com/repos
          REPO: mafalb/ansible-test-collections
        run: |
          curl -X POST $URI/$REPO/dispatches \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H 'Accept: application/vnd.github+json' \
          --data '{"client_payload": { "targeted_branch": "$TARGETED_BRANCH }}" }}'
...
